{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/attribution/attribution.component.ts","webpack:///src/app/attribution/attribution.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboard/loading/loading.component.ts","webpack:///src/app/dashboard/loading/loading.component.html","webpack:///src/app/hero-detail/hero-detail.component.ts","webpack:///src/app/hero-detail/hero-detail.component.html","webpack:///src/app/hero-search/hero-search.component.ts","webpack:///src/app/hero-search/hero-search.component.html","webpack:///src/app/hero.service.ts","webpack:///src/app/heroes/heroes.component.ts","webpack:///src/app/heroes/heroes.component.html","webpack:///src/app/message.service.ts","webpack:///src/app/messages/messages.component.ts","webpack:///src/app/messages/messages.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","svgIconLocation","declarations","providers","bootstrap","AttributionComponent","DashboardComponent","heroService","heroes","length","getHeroes","subscribe","getRandomHeroes","sort","Math","random","slice","LoadingComponent","encapsulation","None","HeroDetailComponent","route","location","hero","getHero","snapshot","paramMap","get","tryGetHeroLocally","back","updateLocalHero","thumbnail","series","available","items","goBack","save","HeroSearchComponent","searchTerms","term","next","heroes$","pipe","searchHeroes","search","HeroService","http","messageService","heroesUrl","marvelAPI","ts","publicKey","privateKey","hash","marvelAPIBaseURL","marvelAPIQueryParams","newlyAddedId","httpOptions","headers","marvelAPIURL","_","log","res","data","results","handleError","url","x","status","findHeroById","find","h","message","add","operation","result","error","console","put","updateHeroName","name","post","newHero","trim","providedIn","HeroesComponent","push","extension","filter","MessageService","messages","MessagesComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n  { path: 'heroes', component: HeroesComponent },\n  { path: 'dashboard', component: DashboardComponent },\n  { path: 'detail/:id', component: HeroDetailComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\n\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Marvel Heroes';\n}\n","<header>\n  <h1>{{title | uppercase}}</h1>\n</header>\n<nav>\n  <dt-button-group>\n    <dt-button-group-item dt-button routerLink=\"/dashboard\">Dashboard</dt-button-group-item>\n    <dt-button-group-item dt-button routerLink=\"/heroes\">Heroes</dt-button-group-item>\n  </dt-button-group>\n</nav>\n<router-outlet></router-outlet>\n<app-messages></app-messages>\n<app-attribution></app-attribution>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'; // <-- NgModel lives here\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HeroesComponent } from './heroes/heroes.component';\nimport { HeroDetailComponent } from './hero-detail/hero-detail.component';\nimport { MessagesComponent } from './messages/messages.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { HeroSearchComponent } from './hero-search/hero-search.component';\nimport { DtIconModule } from '@dynatrace/barista-components/icon';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DtButtonModule } from '@dynatrace/barista-components/button';\nimport { DtFormFieldModule } from '@dynatrace/barista-components/form-field';\nimport { DtInputModule } from '@dynatrace/barista-components/input';\nimport { DtLoadingDistractorModule } from '@dynatrace/barista-components/loading-distractor';\nimport { DtButtonGroupModule } from '@dynatrace/barista-components/button-group';\nimport { DtCardModule } from '@dynatrace/barista-components/card';\nimport { DtInlineEditorModule } from '@dynatrace/barista-components/inline-editor';\nimport { AttributionComponent } from './attribution/attribution.component';\nimport { LoadingComponent } from './dashboard/loading/loading.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeroesComponent,\n    HeroDetailComponent,\n    MessagesComponent,\n    DashboardComponent,\n    HeroSearchComponent,\n    AttributionComponent,\n    LoadingComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DtIconModule.forRoot({ svgIconLocation: '/assets/icons/{{name}}.svg' }),\n    DtButtonModule,\n    DtFormFieldModule,\n    DtInputModule,\n    HttpClientModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    DtButtonGroupModule,\n    DtCardModule,\n    DtInlineEditorModule,\n    DtLoadingDistractorModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-attribution',\n  templateUrl: './attribution.component.html',\n  styleUrls: ['./attribution.component.css']\n})\nexport class AttributionComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","  <p>Data provided by <a href=\"https://marvel.com\">Marvel</a>. © 2014 Marvel</p>\n","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  heroes: Hero[] = [];\n\n  constructor(private heroService: HeroService) { }\n\n  ngOnInit() {\n    if (!this.heroes || !this.heroes.length) {\n      this.getHeroes();\n    }\n  }\n\n  getHeroes(): void {\n    this.heroService.getHeroes().subscribe(heroes => this.heroes = this.getRandomHeroes(heroes));\n  }\n\n  getRandomHeroes(heroes: Hero[]) {\n    return heroes.sort(() => 0.5 - Math.random()).slice(0, 4);\n  }\n}\n","<h2>Top Heroes</h2>\n<div *ngIf=\"heroes.length\">\n  <div class=\"grid grid-pad\">\n    <a *ngFor=\"let hero of heroes\" class=\"col-1-4\" routerLink=\"/detail/{{hero.id}}\">\n      <div class=\"module hero\">\n        <h4>{{hero.name}}</h4>\n      </div>\n    </a>\n  </div>\n\n  <app-hero-search></app-hero-search>\n</div>\n\n<div *ngIf=\"!heroes.length\">\n  <app-loading></app-loading>\n</div>\n","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector: 'app-loading',\n  templateUrl: './loading.component.html',\n  styleUrls: ['./loading.component.css'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class LoadingComponent implements OnInit {\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<dt-loading-spinner></dt-loading-spinner>\n","import { Component, OnInit, Input } from '@angular/core';\nimport { Hero } from '../hero';\nimport { ActivatedRoute } from '@angular/router';\nimport { Location } from '@angular/common';\n\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-detail',\n  templateUrl: './hero-detail.component.html',\n  styleUrls: ['./hero-detail.component.css']\n})\n\nexport class HeroDetailComponent implements OnInit {\n  @Input() hero: Hero;\n\n  constructor(\n    private route: ActivatedRoute,\n    private heroService: HeroService,\n    private location: Location\n  ) { }\n\n  ngOnInit() {\n    if (!this.hero) {\n      this.getHero();\n    }\n  }\n\n  getHero(): void {\n    const id = +this.route.snapshot.paramMap.get('id');\n    this.hero = this.heroService.tryGetHeroLocally(id) || null;\n\n    if (!this.hero) {\n      this.heroService.getHero(id).subscribe(hero => this.hero = hero);\n    }\n  }\n\n  goBack(): void {\n    this.location.back();\n  }\n\n  save(): void {\n    this.heroService.updateLocalHero(this.hero);\n    // this.heroService.updateHero(this.hero)\n    //   .subscribe(() => this.goBack());\n  }\n\n  getImage() {\n    return `${this.hero.thumbnail.path}/standard_xlarge.jpg`;\n  }\n\n  getSeriesItems(hero: Hero) {\n    return hero.series.available > 0 ? hero.series.items : null;\n  }\n}\n","<div *ngIf=\"hero\" class=\"details\">\n  <h2>{{hero.name | uppercase}}</h2>\n\n  <div class=\"info_container\">\n    <div class=\"info\">\n      <img src=\"{{getImage()}}\" alt=\"{{hero.name}}\" />\n      <div class=\"info_text_container\">\n        <div class=\"id_box\">\n          <label class=\"hero_label\">ID</label>\n          <p class=\"hero_id\">{{hero.id}}</p>\n        </div>\n        <div>\n          <label>Name:</label>\n          <em dt-inline-editor [(ngModel)]=\"hero.name\" ariaLabelSave=\"Save name\"\n            ariaLabelCancel=\"Cancel and discard changes\"></em>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  <div class=\"info_container\" *ngIf=\"getSeriesItems(hero)\">\n    <div class=\"series\">\n      <div class=\"series_text_container\">\n        <div>\n          <label>Series</label>\n          <p class=\"hero_serie\" *ngFor=\"let serie of getSeriesItems(hero)\">{{serie.name}}</p>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div>\n  <button dt-button (click)=\"goBack()\">Go back</button>\n  <button dt-button (click)=\"save()\">Save</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\nimport { Observable, Subject } from 'rxjs';\n\nimport {\n   debounceTime, distinctUntilChanged, switchMap\n } from 'rxjs/operators';\n\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n\n@Component({\n  selector: 'app-hero-search',\n  templateUrl: './hero-search.component.html',\n  styleUrls: [ './hero-search.component.css' ]\n})\nexport class HeroSearchComponent implements OnInit {\n  heroes$: Observable<Hero[]>;\n  private searchTerms = new Subject<string>();\n\n  constructor(private heroService: HeroService) {}\n\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n\n  ngOnInit(): void {\n    this.heroes$ = this.searchTerms.pipe(\n      // wait 300ms after each keystroke before considering the term\n      debounceTime(300),\n\n      // ignore new term if same as previous term\n      distinctUntilChanged(),\n\n      // switch to new search observable each time the term changes\n      switchMap((term: string) => this.heroService.searchHeroes(term)),\n    );\n  }\n}\n","<dt-card>\n  <dt-card-title>\n    <label for=\"search-box\">Search for hero</label>\n  </dt-card-title>\n  <input #searchBox dtInput id=\"search-box\" (input)=\"search(searchBox.value)\" />\n\n  <ul class=\"search-result\">\n    <li *ngFor=\"let hero of heroes$ | async\">\n      <a routerLink=\"/detail/{{hero.id}}\">\n        {{hero.name}}\n      </a>\n    </li>\n  </ul>\n</dt-card>\n","import { Injectable } from '@angular/core';\nimport { Hero } from './hero';\nimport { Observable, of } from 'rxjs';\nimport { MessageService } from './message.service';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class HeroService {\n  private heroesUrl = 'api/heroes';  // URL to web api\n  private marvelAPI: { ts: string, publicKey: string, privateKey: string, hash: string } = {\n    ts: '1',\n    publicKey: 'ce160eefcb9aebd904aebc4b26834292',\n    privateKey: 'b6514e52a26973fc538d9a33f3c1bb65f17e3c28',\n    hash: 'f68daa7ad9dd734af8ebffd116a2c18d'\n  };\n  // tslint:disable-next-line: max-line-length\n  private marvelAPIBaseURL = 'https://gateway.marvel.com/v1/public/characters';\n  private marvelAPIQueryParams = `ts=${this.marvelAPI.ts}&apikey=${this.marvelAPI.publicKey}&hash=${this.marvelAPI.hash}`;\n  public heroes: Hero[];\n  public newlyAddedId = 20000;\n\n  constructor(\n    private http: HttpClient,\n    private messageService: MessageService) { }\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  // getHeroes(): Observable<Hero[]> {\n  //   this.messageService.add('HeroService fetched heroes');\n  //   return of(HEROES);\n  // }\n\n  /** GET heroes from the server */\n  getHeroes(): Observable<Hero[]> {\n    const marvelAPIURL = `${this.marvelAPIBaseURL}?${this.marvelAPIQueryParams}`;\n    return this.http.get<any>(marvelAPIURL)\n      .pipe(\n        tap(_ => this.log('fetched heroes')),\n        map(res => res.data.results),\n        catchError(this.handleError<Hero[]>('getHeroes', []))\n      );\n  }\n\n  /** GET hero by id. Will 404 if id not found */\n  getHero(id: number): Observable<Hero> {\n    const url = `${this.marvelAPIBaseURL}/${id}?${this.marvelAPIQueryParams}`;\n    return this.http.get<any>(url).pipe(\n      tap(x => x.status === 'Ok' && x.data.results.length ?\n        this.log(`fetched heroes with id=\"${id}\"`) :\n        this.log(`no heroes matching id \"${id}\" could be found`),\n      ),\n      map(res => res ? res.data.results[0] : null),\n      catchError(this.handleError<Hero>(`getHero from API with id=${id}`))\n    );\n  }\n\n  tryGetHeroLocally(id: number): Hero {\n    if (!this.heroes || !this.heroes.length) {\n      this.getHeroes().subscribe(heroes => { this.heroes = heroes; return this.findHeroById(id); });\n      return;\n    }\n\n    return this.findHeroById(id);\n  }\n\n  private findHeroById(id: number): Hero {\n    return this.heroes.find(h => h.id === id);\n  }\n  /** Log a HeroService message with the MessageService */\n  private log(message: string) {\n    this.messageService.add(`HeroService: ${message}`);\n  }\n\n  /**\n * Handle Http operation that failed.\n * Let the app continue.\n * @param operation - name of the operation that failed\n * @param result - optional value to return as the observable result\n */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      this.log(`${operation} failed: ${error && error.error ? error.error.status : error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n  /** PUT: update the hero on the server */\n  updateHero(hero: Hero): Observable<any> {\n    return this.http.put(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap(_ => this.log(`updated hero id=${hero.id}`)),\n      catchError(this.handleError<any>('updateHero'))\n    );\n  }\n\n  updateLocalHero(hero: Hero): void {\n    if (!this.heroes || !this.heroes.length) {\n      this.getHeroes().subscribe(heroes => { this.heroes = heroes; this.updateHeroName(hero); });\n      return;\n    }\n\n    this.updateHeroName(hero);\n  }\n\n  updateHeroName(hero: Hero) {\n    this.heroes.find(h => h.id === hero.id).name = hero.name; // only first found item is changed;\n    // this.heroes.forEach((element, index) => {  //to change all names\n    //   if (element.name === hero.name) {\n    //     this.heroes[index].name = hero.name;\n    //   }\n    // });\n  }\n\n  /** POST: add a new hero to the server */\n  addHero(hero: Hero): Observable<Hero> {\n    return this.http.post<Hero>(this.heroesUrl, hero, this.httpOptions).pipe(\n      tap((newHero: Hero) => this.log(`added hero w/ id=${newHero.id}`)),\n      catchError(this.handleError<Hero>('addHero'))\n    );\n  }\n\n  /** DELETE: delete the hero from the server */\n  deleteHero(hero: Hero | number): Observable<Hero> {\n    const id = typeof hero === 'number' ? hero : hero.id;\n    const url = `${this.heroesUrl}/${id}`;\n\n    return this.http.delete<Hero>(url, this.httpOptions).pipe(\n      tap(_ => this.log(`deleted hero id=${id}`)),\n      catchError(this.handleError<Hero>('deleteHero'))\n    );\n  }\n\n  /* GET heroes whose name contains search term */\n  searchHeroes(term: string): Observable<Hero[]> {\n    if (!term.trim()) {\n      // if not search term, return empty hero array.\n      return of([]);\n    }\n\n    const url = `${this.marvelAPIBaseURL}?name=${term}&${this.marvelAPIQueryParams}`;\n    return this.http.get<any>(url).pipe(\n      tap(x => x.status === 'Ok' && x.data.results.length ?\n        this.log(`found heroes matching \"${term}\"`) :\n        this.log(`no heroes matching \"${term}\"`),\n      ),\n      map(res => res.data.results),\n      catchError(this.handleError<Hero[]>('searchHeroes', [])),\n    );\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../hero';\nimport { HeroService } from '../hero.service';\n// import { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\n\nexport class HeroesComponent implements OnInit {\n  constructor(public heroService: HeroService/*, private messageService: MessageService*/) { }\n\n  ngOnInit() {\n    if (!this.heroService.heroes || !this.heroService.heroes.length) {\n      this.getHeroes();\n    }\n  }\n\n  // onSelect(hero: Hero): void {\n  //   this.selectedHero = hero;\n  //   this.messageService.add(`HeroService: Selected hero id=${hero.id}, name=${hero.name}`);\n  // }\n\n  getHeroes(): void {\n    this.heroService.getHeroes().subscribe(heroes => this.heroService.heroes = heroes);\n  }\n\n  add(name: string): void {\n    name = name.trim();\n    if (!name) { return; }\n    // tslint:disable-next-line: max-line-length\n    this.heroService.heroes.push({ name, id: this.heroService.newlyAddedId, series: {}, thumbnail: { path: 'https://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available/', extension: 'jpg' } });\n    this.heroService.newlyAddedId++;\n    // this.heroService.addHero({ name } as Hero)\n    //   .subscribe(hero => {\n    //     this.heroes.push(hero);\n    //   });\n  }\n\n  delete(hero: Hero): void {\n    this.heroService.heroes = this.heroService.heroes.filter(h => h !== hero);\n    // this.heroService.deleteHero(hero).subscribe();\n  }\n\n  getImage(hero: Hero) {\n    return `${hero.thumbnail.path}/standard_xlarge.jpg`;\n  }\n}\n","<dt-card>\n  <dt-card-title>Heroes</dt-card-title>\n  <div class=\"inline\">\n    <input type=\"text\" dtInput placeholder=\"Please add hero name\" #heroName />\n    <!-- (click) passes input value to add() and then clears the input -->\n    <button dt-button (click)=\"add(heroName.value); heroName.value=''\">\n      <dt-icon name=\"plus-add\"></dt-icon>\n      Add\n    </button>\n  </div>\n\n  <ul class=\"heroes\" *ngIf=\"heroService.heroes\">\n    <li *ngFor=\"let hero of heroService.heroes\">\n      <a routerLink=\"/detail/{{hero.id}}\">\n        <span class=\"badge\">{{hero.id}}</span>\n        <span class=\"name\">{{hero.name}}</span>\n      </a>\n      <button class=\"delete\" title=\"delete hero\" (click)=\"delete(hero)\">\n        <!-- <dt-icon name=\"abort\"></dt-icon> -->\n        x\n      </button>\n    </li>\n\n  </ul>\n</dt-card>\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class MessageService {\n  messages: string[] = [];\n\n  add(message: string) {\n    this.messages.push(message);\n  }\n\n  clear() {\n    this.messages = [];\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { MessageService } from '../message.service';\n\n@Component({\n  selector: 'app-messages',\n  templateUrl: './messages.component.html',\n  styleUrls: ['./messages.component.css']\n})\nexport class MessagesComponent implements OnInit {\n\n  constructor(public messageService: MessageService) { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"dt-demo-card\" *ngIf=\"messageService.messages.length\">\n  <dt-card>\n    <dt-card-title> Messages </dt-card-title>\n    <button dt-button variant=\"secondary\" class=\"clear\" (click)=\"messageService.clear()\">\n      <dt-icon name=\"delete\"></dt-icon>Clear\n    </button>\n    <div class=\"messages\" *ngFor='let message of messageService.messages'>\n      <span class=\"message\">{{message}}</span>\n    </div>\n  </dt-card>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}